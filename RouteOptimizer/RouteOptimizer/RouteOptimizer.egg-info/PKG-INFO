Metadata-Version: 2.1
Name: RouteOptimizer
Version: 1.0.0
Summary: A Fundamental Python Program for Route Calculation
Home-page: https://github.com/vasstha/ACIT_4420_Final_Assignment.git
Author: Vaskar Shrestha
Author-email: vashr0444@oslomet.no
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: matplotlib>=3.0.0
Requires-Dist: geopy>=2.0.0
Requires-Dist: numpy>=1.18.0

# RouteOptimizer

RouteOptimizer is a GUI-based Python application for optimizing travel routes. It allows users to calculate optimal travel routes based on criteria such as time, cost, or the number of transfers, and visualize the results.

---

## Features

- Optimize routes based on time, cost, or transfers.
- Visualize travel routes with color-coded transport modes.
- GUI interface built with `Tkinter` for ease of use.

---

## Installation

### Clone the Repository

To get started, clone the repository from GitHub:

```bash
git clone https://github.com/yourusername/your-repo-name.git
```

Navigate into the project directory:

```bash
cd your-repo-name
```

### Install Dependencies

Before running the program, ensure you have Python 3.7 or higher installed. Then, install the required dependencies:

```bash
pip install -r requirements.txt
```

Alternatively, if `setup.py` is configured:

```bash
pip install .
```

---

## Usage

### Run the Program

After installation, you can run the program using the following command:

```bash
route-optimizer
```

This will launch the GUI application.

### Running from Source

If you prefer to run the program directly from the source, use:

```bash
python main.py
```

---

## Example Workflow

1. Open the application.
2. Select the optimization criteria (time, cost, or transfers) from the dropdown menu.
3. Click **Run Optimization**.
4. View the results in the results panel.
5. Visualize the optimized route in a separate window.

---

## Development

If you'd like to contribute or modify the project:

1. Fork the repository.
2. Create a feature branch:
   ```bash
   git checkout -b feature-name
   ```
3. Make your changes and commit:
   ```bash
   git commit -m "Description of changes"
   ```
4. Push your changes and create a pull request.

---

## Dependencies

The project uses the following Python libraries:

- `matplotlib` for plotting visualizations.
- `geopy` for geographical calculations.
- `numpy` for handling distance matrices.
- `tkinter` (built into Python) for the GUI.

---

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.

---

## Contact

For issues or suggestions, please open an issue on the GitHub repository or contact the author:

- **Email:** your.email@example.com
- **GitHub:** [yourusername](https://github.com/yourusername)
